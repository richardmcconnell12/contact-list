(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const contactCollection = {
  getAllContacts() {
    return fetch("http://localhost:8088/contact").then(response => response.json());
  },

  postNewContact(newContactToSave) {
    fetch("http://localhost:8088/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(newContactToSave)
    });
    location.reload(true);
  }

};
var _default = contactCollection;
exports.default = _default;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contactCollection = _interopRequireDefault(require("./contactCollection"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactForm = {
  // time to build the HTML Form
  createAndAppendForm() {
    let formHeader = document.createElement("h3");
    formHeader.textContent = "Add a new contact";
    let contactNameField = document.createElement("fieldset");
    let contactNameLabel = document.createElement("label");
    contactNameLabel.textContent = "Name";
    contactNameLabel.setAttribute("for", "contactName");
    let contactNameInput = document.createElement("input");
    contactNameInput.setAttribute("id", "contactName");
    contactNameInput.setAttribute("name", "contactName");
    contactNameField.appendChild(contactNameLabel);
    contactNameField.appendChild(contactNameInput);
    let contactAddressField = document.createElement("fieldset");
    let contactAddressLabel = document.createElement("label");
    contactAddressLabel.textContent = "Address";
    contactAddressLabel.setAttribute("for", "contactAddress");
    let contactAddressInput = document.createElement("input");
    contactAddressInput.setAttribute("id", "contactAddress");
    contactAddressInput.setAttribute("name", "contactAddress");
    contactAddressField.appendChild(contactAddressLabel);
    contactAddressField.appendChild(contactAddressInput);
    let contactNumberField = document.createElement("fieldset");
    let contactNumberLabel = document.createElement("label");
    contactNumberLabel.textContent = "Number";
    contactNumberLabel.setAttribute("for", "contactNumber");
    let contactNumberInput = document.createElement("input");
    contactNumberInput.setAttribute("id", "contactNumber");
    contactNumberInput.setAttribute("name", "contactNumber");
    contactNumberField.appendChild(contactNumberLabel);
    contactNumberField.appendChild(contactNumberInput);
    let submitButton = document.createElement("button");
    submitButton.textContent = "Add contact";
    submitButton.setAttribute = ("class", "contactSave");
    submitButton.addEventListener("click", this.handleAddNewContact);
    let contactFormFragment = document.createDocumentFragment();
    contactFormFragment.appendChild(formHeader);
    contactFormFragment.appendChild(contactNameField);
    contactFormFragment.appendChild(contactAddressField);
    contactFormFragment.appendChild(contactNumberField);
    contactFormFragment.appendChild(submitButton);
    let formArticle = document.querySelector(".form");
    formArticle.appendChild(contactFormFragment);
  },

  handleAddNewContact(event) {
    let inputContactName = document.querySelector("#contactName").value;
    let inputContactAddress = document.querySelector("#contactAddress").value;
    let inputContactNumber = document.querySelector("#contactNumber").value;
    let newContact = {
      name: inputContactName,
      address: inputContactAddress,
      number: inputContactNumber
    };

    _contactCollection.default.postNewContact(newContact);
  }

};
var _default = contactForm;
exports.default = _default;

},{"./contactCollection":1}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contactCollection = _interopRequireDefault(require("./contactCollection"));

var _contacts = _interopRequireDefault(require("./contacts"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactList = {
  contactify() {
    _contactCollection.default.getAllContacts().then(allContacts => {
      let contactDocFragment = document.createDocumentFragment();
      allContacts.forEach(contactItem => {
        let contactHtml = _contacts.default.contactBuilder(contactItem);

        contactDocFragment.appendChild(contactHtml);
      });
      let outputArticle = document.querySelector(".output");
      outputArticle.appendChild(contactDocFragment);
    });
  }

};
var _default = contactList;
exports.default = _default;

},{"./contactCollection":1,"./contacts":4}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const contact = {
  contactBuilder(contactObject) {
    let contactArticle = document.createElement("article");
    let contactName = document.createElement("h3");
    contactName.textContent = contactObject.name;
    let contactAddress = document.createElement("p");
    contactAddress.textContent = contactObject.address;
    let contactNumber = document.createElement("p");
    contactNumber.textContent = contactObject.number;
    contactArticle.appendChild(contactName);
    contactArticle.appendChild(contactAddress);
    contactArticle.appendChild(contactNumber);
    return contactArticle;
  }

};
var _default = contact;
exports.default = _default;

},{}],5:[function(require,module,exports){
"use strict";

var _contactList = _interopRequireDefault(require("./contactList"));

var _contactForm = _interopRequireDefault(require("./contactForm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_contactList.default.contactify();

_contactForm.default.createAndAppendForm();

},{"./contactForm":2,"./contactList":3}]},{},[5])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
